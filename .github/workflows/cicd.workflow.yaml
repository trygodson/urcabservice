name: Deploy to GCLOUD
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build NestJS app
        run: npm run build

      - name: Create deployment archive
        run: |
          tar -czf deploy.tar.gz \
            --exclude='node_modules/.cache' \
            --exclude='*.log' \
            dist/ \
            node_modules/ \
            package.json \
            package-lock.json
      - name: Test SSH Connection
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          timeout: 30s
          script: |
            echo "SSH connection successful!"
            whoami
            pwd
      - name: Deploy archive to Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          source: 'deploy.tar.gz'
          target: '/tmp/'

      - name: Extract and restart PM2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY}}
          script: |
            cd /var/www/apps/urcabservice
            tar -xzf /tmp/deploy.tar.gz
            rm /tmp/deploy.tar.gz
            pm2 restart main || pm2 start dist/apps/user_api/main.js --name main
            pm2 restart admin || pm2 start dist/apps/admin_api/main.js --name admin
            pm2 save
            pm2 startup systemd -u root --hp /root || true
      # - name: Setup and Start Services
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     port: ${{ secrets.PORT }}
      #     script: |
      #       # Create app directory if it doesn't exist
      #       mkdir -p /var/www/apps/urcabservice
      #       cd /var/www/apps/urcabservice

      #       # Extract the deployment archive
      #       tar -xzf /tmp/deploy.tar.gz
      #       rm /tmp/deploy.tar.gz

      #       # Install production dependencies
      #       npm ci --production --legacy-peer-deps

      #       # Create PM2 ecosystem file if it doesn't exist
      #       cat > ecosystem.config.js << 'EOL'
      #       module.exports = {
      #         apps: [{
      #           name: 'user-api',
      #           script: './dist/apps/user_api/main.js',
      #           instances: 1,
      #           exec_mode: 'cluster',
      #           env: {
      #             NODE_ENV: 'production',
      #             PORT: 3000
      #           }
      #         },
      #         {
      #           name: 'admin-api',
      #           script: './dist/apps/admin_api/main.js',
      #           instances: 1,
      #           exec_mode: 'cluster',
      #           env: {
      #             NODE_ENV: 'production',
      #             PORT: 3001
      #           }
      #         }]
      #       }
      #       EOL

      #       # Start/Restart services using PM2
      #       pm2 delete all || true
      #       pm2 start ecosystem.config.js
      #       pm2 save

      #       # Setup PM2 to start on system boot
      #       pm2 startup systemd -u $USER --hp $HOME || true

      #       echo "Deployment completed successfully!"
